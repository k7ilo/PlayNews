#!/bin/bash
#
# CHECK FOR THE playnews.ini FILE -------------------------------------------------------------------------------------------------------------
script_dir=$(dirname "$0")
if [ ! -f "$script_dir/playnews.ini" ]
     then
        echo -e "\nplaynews.ini file missing\n"
        exit
     else
        source "$script_dir/playnews.ini"
fi


# SET THE FOLLOWING VARIABLES FOR THIS PARTICULAR INSTALL -------------------------------------------------------------------------------------
#
# VOICEDIR - Directory for playnews voice files
VOICEDIR="$script_dir/audio_files"

# TMPDIR - Directory for temporary file storage
TMPDIR="$script_dir/audio_tmp" 
# End User defines


# CHECK FOR THE PLAYNEWS VOICE FILES ----------------------------------------------------------------------------------------------------------
if [ ! -f $VOICEDIR/ARNstart.mp3 ]
  then
    echo "playnews voice files not found - check VOICEDIR in script"
    exit 1
fi


# CONFIGURE COMMAND FORMAT --------------------------------------------------------------------------------------------------------------------
#
# --- NEWSTYPE is either ARRL or ARN. Always required as parameter 1
if [ -z "$1" ]
  then
     echo "No Play type given - ARN or ARRL"
     exit 1
  else
     NEWSTYPE=${1^^}
     if [ "$NEWSTYPE" != "ARN" ] && [ "$NEWSTYPE" != "ARRL" ]
        then 
           echo "Play type must be ARRL or ARN"
           exit 1
     fi
fi


# --- Time to start - 24 hour time. Always required as parameter 2
#     Time example 03:19 = 3:19 AM, 22:45 = 10:45 PM 
if [ ${2^^} != "NOW" ] && [[ !  $2 =~ ^[0-9][0-9]:[0-9][0-9]$ ]]
  then
    echo "No Time supplied - Enter 24 hour time to play as 00:00 - (7 PM = 19:00)"
    exit 1
fi
TIME=$2


# AUDIO DOWNLOAD, DIVISION AND CONVERSION -----------------------------------------------------------------------------------------------------
#
# --- Delete old MP3 files.
sudo rm -f $TMPDIR/news.mp3


# --- Download new Newsline or ARRL file
echo "Downloading the new $NEWSTYPE Audio News @ $(date +%H:%M:%S)"
# --- ARN_URL and ARRL_URL are set in playnews.ini
if [ $NEWSTYPE == "ARN" ]
  then 
# --- Timeout set to 15 seconds with 4 retries. Set the timeout longer for slow circuits.
     sudo wget -T 15 --tries=4 -O $TMPDIR/news.mp3 $ARN_URL 
  else
# --- not ARN so get ARRL
     sudo wget -T 15 --tries=4 -O $TMPDIR/news.mp3 $ARRL_URL
fi


if [ -f $TMPDIR/news.mp3 ];
 then
 echo "Download complete @ $(date +%H:%M:%S)"
else
 echo "Download failed"
 exit 0
fi


# --- On holidays ARRL does not put out a news MP3. Instead there is a 
#     shorter HTML file. The following routine checks for this and
#     exits if there is no valid MP3 file.
filesize=$(wc -c <$TMPDIR/news.mp3)
if [ $filesize -lt 100000 ]
 then
    echo "File size too small for play"
    exit 0
fi


# --- Calculate the length of the MP3 file into seconds
LENGTH=`sudo soxi -D $TMPDIR/news.mp3`
#echo $LENGTH
START=0
INCREMENT=150  # --- 2.5 minute = 150 seconds


# --- Calculate the number of 2.5 minute segments
MAXPART=`echo $LENGTH/$INCREMENT | bc` 
let "MAXPART += 1"
PART="1"
#echo $MAXPART


# --- Divide the MP3 file into 2.5 minute segments
while [ "$PART" -le "$MAXPART" ]; do
      sudo sox --temp $TMPDIR $TMPDIR/news.mp3 $TMPDIR/news.part$PART.mp3 trim $START $INCREMENT &> /dev/null 2>&1
      echo "Creating $TMPDIR/news.part$PART.mp3"
      START=$(($START-5+$INCREMENT))
#     echo "$PART - $START - $INCREMENT  $(($START+$INCREMENT))"
      let "PART += 1"
done


# BROADCAST -----------------------------------------------------------------------------------------------------------------------------------
if [ ${TIME^^} != "NOW" ]
then
echo "$NEWSTYPE news will start at $TIME with 5 and 10 minute pre-warnings"


# --- First warning time - 10 minutes before
TIME10=`date --date "$TIME now 10 minutes ago" +%H:%M`

 
# --- Last warning time - 5 minutes before
TIME5=`date --date "$TIME now 5 minutes ago" +%H:%M`


# --- Waiting to play the 10 minute announcement
echo "Waiting to play the 10 minute announcement"
while [ $(date +%H:%M) != $TIME10 ]; do sleep 1; done
   # Start 10 minute message
   /usr/bin/play -q "$VOICEDIR/${NEWSTYPE}start10.mp3" -t alsa


# --- Waiting to play the 5 minute announcement
echo "Waiting to play the 5 minute announcement"
while [ $(date +%H:%M) != $TIME5 ]; do sleep 1; done
   # Start 5 minute message
   /usr/bin/play -q "$VOICEDIR/${NEWSTYPE}start5.mp3" -t alsa


# --- Waiting for the start time
echo "Waiting for the start time"
while [ $(date +%H:%M) != $TIME ]; do sleep 1; done
else
echo "$NEWSTYPE news will start $TIME"
echo -n "Press any key to start the news broadcast..."
read -n 1 
fi


# --- 10 Second Countdown
echo
echo "Starting in 10 seconds - Hit Ctrl C to interrupt"
for (( X=10; X >= 1; X-- ))
do
     echo -n "$X "
     sleep 1
done
echo


# --- Play the start announcment
   /usr/bin/play -q "$VOICEDIR/${NEWSTYPE}start.mp3" -t alsa
sleep 10


# --- Play the news broadcast
PART="1"
while [ "$PART" -le "$MAXPART" ]; do
      echo "Playing file $TMPDIR/news.part$PART.mp3"
      if [ "$PART" -lt  "$MAXPART" ]; then          
         /usr/bin/play -q $TMPDIR/news.part$PART.mp3 -t alsa
         # Play 20 second Station break message every 2.5 minutes
         /usr/bin/play -q "$VOICEDIR/${NEWSTYPE}continue.mp3" -t alsa
         # 20 second timer
         sleep 20
      else        
         /usr/bin/play -q "$VOICEDIR/${NEWSTYPE}stop.mp3" -t alsa        # Play end message
         LENGTH=`soxi -D "$VOICEDIR/${NEWSTYPE}stop.mp3" 2>/dev/null`    # Terminate script at end of audio
         DELAY=${LENGTH/.*} 
         sleep $DELAY
      fi
      let "PART += 1"
done

# Remove all files created by playnews
sudo rm -f $TMPDIR/news*

exit 0
